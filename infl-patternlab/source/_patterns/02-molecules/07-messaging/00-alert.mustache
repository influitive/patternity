<section class="pattern-section">
  <header>
    <h3>alert</h3>
  </header>

  <p>The alerts has several states info or default, success and error.  Each Type is used for specific circumstances:</p>

  <h4>Info / Default</h4>

  <p>The info or default alert should be used to alert the user of actions that they should take, or to inform them that something needs their attention but aren't required to take immediate action.</p>

  <div id="alert-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Default Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        hideIn : 5
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-icon-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Default Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        showIcon: true
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-icon-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-closeable-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Default Alert",
        children : [],
        closeable: true
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-closeable-pattern")
      );
    })();
  </script>

  <h4>Warning</h4>

  <p>The warning alert should be used to alert the user that something they are doing is not reommended.</p>

  <div id="warning-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "warning-" + Math.random(),
        title : "Warning Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        type: "warning"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("warning-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="warning-icon-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "warning-" + Math.random(),
        title : "Warning Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        showIcon: true,
        type: "warning"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("warning-icon-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="warning-closeable-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "warning-" + Math.random(),
        title : "Warning Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        closeable: true,
        type: "warning"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("warning-closeable-pattern")
      );
    })();
  </script>

  <h4>Success</h4>

  <p>The success alert should be used to confirm an action was complete successfully.</p>

  <div id="alert-success-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Success Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        type: "success"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-success-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-success-icon-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Success Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        showIcon: true,
        type: "success"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-success-icon-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-success-closeable-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Success Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        closeable: true,
        type: "success"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-success-closeable-pattern")
      );
    })();
  </script>

  <h4>Error</h4>

  <p>The error alert should be used to show that an action failed, validation failed, etc.</p>

  <div id="alert-error-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Error Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        type: "error"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-error-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-error-icon-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Error Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        showIcon: true,
        type: "error"
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-error-icon-pattern")
      );
    })();
  </script>

  <br />
  <br />

  <div id="alert-error-closeable-pattern"></div>
  <script type="text/javascript">
    (function() {
      var props = {
        key: "alert-" + Math.random(),
        title : "Error Alert",
        children : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."],
        closeable: true,
        type: "error",
        showAlert : false
      };

      inflComp.React.render(
        inflComp.React.createElement(inflComp.Alert, props),
        document.getElementById("alert-error-closeable-pattern")
      );
    })();
  </script>

  <h4 class="code-title">Code</h4>

  <h5 class="code-title">JSX</h5>
  <pre class="code">
    <code>
      &lt;Alert {...this.props}&gt;
        &lt;p&gt;Your Body&lt;/p&gt;
        &lt;p&gt;Your Body&lt;/p&gt;
      &lt;/Alert&gt;

      &lt;Alert title="Your Title" &gt;
        &lt;p&gt;Your Body&lt;/p&gt;
        &lt;p&gt;Your Body&lt;/p&gt;
      &lt;/Alert&gt;
    </code>
  </pre>

  <h5 class="code-title">Without JSX</h5>
  <pre class="code">
    <code>
      React.render(
        React.createElement(Alert, props, children),
        {DOM element to alert notice to}
      );
    </code>
  </pre>

  <h4 class="code-title">Props</h4>

  <pre class="code">
    <code>
      {
        title : "Your Title",
        showIcon : boolean,           // optional defaults to false
        closeable : boolean,          // optional defaults to false
        children: [...],              // array of text, html, react elements
        type : String                 // can be success, error, warning or ''
        showAlert : boolean           // determines if the alert is visible or not
        onClose : function,           // optional defaults to empty function called when alert is closed
        hideIn : integer              // determines the interval until the input is hidden.  optional and defaults to don't hide
      }
    </code>
  </pre>
</section>



