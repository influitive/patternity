{
  "name": "create-hash",
  "version": "1.1.0",
  "description": "create hashes for browserify",
  "browser": "browser.js",
  "main": "index.js",
  "scripts": {
    "test": "node test.js | tspec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:crypto-browserify/createHash.git"
  },
  "keywords": [
    "crypto"
  ],
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/crypto-browserify/createHash/issues"
  },
  "homepage": "https://github.com/crypto-browserify/createHash",
  "devDependencies": {
    "hash-test-vectors": "^1.3.2",
    "tap-spec": "^2.1.2",
    "tape": "^3.0.3"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "ripemd160": "^1.0.0",
    "sha.js": "^2.3.6"
  },
  "readme": "create-hash\n===\n\n[![Build Status](https://travis-ci.org/crypto-browserify/createHash.svg)](https://travis-ci.org/crypto-browserify/createHash)\n\nNode style hashes for use in the browser, with native has functions in node. Api is the same as hashes in node:\n\n```js\nvar createHash = require('create-hash');\nvar hash = createHash('sha224');\nhash.update('synchronous write'); //optional encoding parameter\nhash.digest();// synchronously get result with optional encoding parameter\n\nhash.write('write to it as a stream');\nhash.end();//remember it's a stream\nhash.read();//only if you ended it as a stream though\n```\n\nTo get the JavaScript version even in node do `require('create-hash/browser');`",
  "readmeFilename": "readme.md",
  "_id": "create-hash@1.1.0",
  "_shasum": "c2ab96b5d4ece5f22df2ef4306803d14da6931e7",
  "_resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.1.0.tgz",
  "_from": "create-hash@>=1.1.0 <2.0.0"
}
